CREATE TABLE STUDENT
(STU_ID INT PRIMARY KEY,
NAME VARCHAR(20) NOT NULL,
DATE_OF_BIRTH  DATE,
COURSE_ID INT,
GENDER VARCHAR(10))
INSERT INTO STUDENT VALUES(1, "PRASANNA","1995-08-20", 9, "FEMALE");
DESC STUDENT
INSERT INTO STUDENT VALUES(2, "SATISH","1989-05-10", 6, "MALE");
INSERT INTO STUDENT VALUES(3, "SANA","1965-11-01", 2, "FEMALE");
INSERT INTO STUDENT VALUES(4, "PRAGNA","1991-03-06", 9, "FEMALE");
INSERT INTO STUDENT VALUES(5, "KIRAN","1993-03-29", 4, "MALE");
DESC STUDENT
SELECT * FROM STUDENT;

drop table BRANCH
CREATE TABLE CITY
(CITY_ID INT PRIMARY KEY,
CITY_NAME VARCHAR(30) NOT NULL,
CITY_POPULATION INT);


CREATE TABLE BRANCH
(B_ID INT PRIMARY KEY,
B_NAME VARCHAR(30) NOT NULL,
B_ADDRESS VARCHAR(50),
B_PHONE VARCHAR(15),
CITY_ID INT NOT NULL);
DESC BRANCH
DESC CITY

ALTER TABLE BRANCH
ADD CONSTRAINT FK_CITYID
FOREIGN KEY(CITY_ID) REFERENCES CITY(CITY_ID);

INSERT INTO CITY VALUES(10, 'BANGOLORE', 2367890);
INSERT INTO CITY VALUES(20, 'CHENNAI', 6474836);
INSERT INTO CITY VALUES(30, 'MUMBAI', 78393739);
SELECT * FROM CITY;


INSERT INTO BRANCH VALUES(500, 'BTM LAYOUT', '185, RING ROAD', '7890847', 10);
INSERT INTO BRANCH VALUES(501, "JAYANAGARr", '44, 15th main', '8909748',  10 );
INSERT INTO BRANCH VALUES(502, 'ASHOK NAGAR', 'ASHOK PILLAR','8948599',  20);
INSERT INTO BRANCH VALUES(503, 'MOUNT ROAD', 'NANDANAM', '8393839', 20 );

 SELECT MAX(COUNT(*)) FROM BRANCH
 GROUP BY CITY_ID

SELECT CITY_NAME FROM CITY
WHERE CITY_POPULATION > (SELECT CITY_POPULATION FROM CITY WHERE CITY_NAME = 'BANGLORE')

SELECT B_NAME FROM BRANCH
WHERE CITY_ID = (SELECT CITY_ID FROM CITY WHERE CITY_NAME = 'CHENNAI')

SELECT CITY_NAME FROM CITY
WHERE CITY_ID NOT IN (SELECT CITY_ID FROM BRANCH);

SELECT B_NAME, B_ADDRESS, B_PHONE FROM BRANCH
WHERE (B_NAME LIKE 'B%' OR B_NAME LIKE 'M%') AND 
CITY_ID IN (SELECT CITY_ID FROM CITY WHERE CITY_NAME LIKE 'B%' OR CITY_NAME LIKE 'C%' )

SELECT COUNT(*)  FROM BRANCH
WHERE CITY_ID = (SELECT CITY_ID FROM CITY WHERE CITY_NAME = 'BANGOLORE')

SELECT B_NAME FROM BRANCH
WHERE B_ADDRESS LIKE '%RING ROAD%'

SELECT CITY_NAME, B_NAME 
FROM CITY C INNER JOIN BRANCH B 
ON C.CITY_ID = B.CITY_ID
ORDER BY CITY_NAME

SELECT CITY_NAME, COUNT(B_ID) NO_OF_BRANCHES
FROM CITY C INNER JOIN BRANCH B 
ON C.CITY_ID = B.CITY_ID
GROUP BY CITY_NAME


SELECT CITY_NAME, COUNT(B_ID) NO_OF_BRANCHES
FROM CITY C INNER JOIN BRANCH B 
ON C.CITY_ID = B.CITY_ID
GROUP BY CITY_NAME
HAVING COUNT(B_ID)  = (SELECT MAX(NO_OF_BRANCHES) 
FROM (SELECT CITY_NAME, COUNT(B_ID) NO_OF_BRANCHES
FROM CITY C INNER JOIN BRANCH B 
ON C.CITY_ID = B.CITY_ID
GROUP BY CITY_NAME) AS COUNTS);

-----------
SELECT MAX(COUNT(*)) NO_OF_BRANCHES
FROM BRANCH
GROUP BY CITY_ID
------------


--------------
SELECT CITY_NAME, CITY_POPULATION, COUNT(*) NUMBER_OF_BRANCHES
FROM CITY C INNER JOIN BRANCH B 
ON C.CITY_ID = B.CITY_ID
GROUP BY CITY_NAME
--------------

SELECT CITY_NAME, CITY_POPULATION, COUNT(B_ID) NUMBER_OF_BRANCHES
FROM CITY C INNER JOIN BRANCH B 
ON C.CITY_ID = B.CITY_ID
GROUP BY CITY_NAME











drop table student;

CREATE TABLE COURSE
(COURSE_ID INT PRIMARY KEY,
COURSE_CODE VARCHAR(10),
COURSE_NAME VARCHAR(30),
COURSE_DURATION_IN_YEARS INT,
COURSE_FEE FLOAT);

CREATE TABLE STUDENT
(STUDENT_ID INT PRIMARY KEY,
STUDENT_NAME VARCHAR(30),
STUDENT_DOB DATE,
STUDENT_DOJ DATE,
STUDENT_CITY VARCHAR(30),
COURSE_ID INT)

ALTER TABLE STUDENT
ADD CONSTRAINT FK_COURSE_ID
FOREIGN KEY(COURSE_ID) REFERENCES COURSE(COURSE_ID);


INSERT INTO COURSE VALUES(1, 'C-1', 'COMPUTER SCIENCE', 4, 25000);
INSERT INTO COURSE VALUES(2, 'C-2', 'MECHANICS', 4, 30000);
INSERT INTO COURSE VALUES(3, 'C-1', 'ELECTRICAL', 4, 20000);

INSERT INTO STUDENT VALUES(101, 'KIRAN', '1993-03-15', '2019-08-20', 'TRIVADRUM',1);
INSERT INTO STUDENT VALUES(102, 'PRASANNA', '1995-08-20', '2020-08-20', 'HYDERABAD',2);
INSERT INTO STUDENT VALUES(103, 'PRAVEEN', '1995-03-19', '2018-05-24', 'BANGLORE',3);
INSERT INTO STUDENT VALUES(104, 'HARI', '2000-03-15', '2019-08-20', 'MYSORE',1);
INSERT INTO STUDENT VALUES(105, 'SATISH', '1999-05-16', '2021-08-20', 'VIJAYAWADA',3);
INSERT INTO STUDENT VALUES(106, 'PRAGNA', '1991-03-07', '2019-08-20', 'CHENNAI',2);
INSERT INTO STUDENT VALUES(107, 'NAVYA', '1995-07-19', '2017-05-20', 'MYSORE',3);
INSERT INTO STUDENT VALUES(108, 'DIVYA', '1998-12-27', '2020-11-25', 'VIZAG',2);
INSERT INTO STUDENT VALUES(109, 'VIVEK', '1999-03-15', '2021-06-13', 'KOCHI',1);
INSERT INTO STUDENT VALUES(110, 'CHAITANYA', '1993-03-15', '2018-10-29', 'PUNE',3);

SELECT * FROM STUDENT;

SELECT * FROM COURSE;



CREATE TABLE PRODUCT
( P_ID INT, P_NAME VARCHAR(20), 
P_FAMILY VARCHAR(20), 
PRICE decimal(15,2), 
COST decimal(15,2),
LAUNCHED_DATE DATE )

INSERT INTO PRODUCT VALUES(100,'MAKER','STATIONARY',25,22,'2008-01-15');
INSERT INTO PRODUCT VALUES(101,'MOUSE','COMPUTER',450,350,'2009-04-16') ;
INSERT INTO PRODUCT VALUES(102,'WHITE_BOARD','STATIONARY',450,375,'2010-08-20') ;
INSERT INTO PRODUCT VALUES(103,'SONY VAIO','COMPUTER',35000,42000,'10-09-21') ;
SELECT * FROM PRODUCT

SELECT P_NAME FROM PRODUCT 
WHERE COST > 250;

SELECT P_ID, P_NAME,COST, PRICE, PRICE-COST AS PROFIT 
FROM PRODUCT;

SELECT P_NAME FROM PRODUCT
WHERE (PRICE-COST) > (SELECT PRICE-COST PROFIT1 FROM PRODUCT WHERE P_NAME = 'MOUSE');

SELECT * FROM PRODUCT 
WHERE P_FAMILY NOT IN ('STATIONARY', 'COMPUTER');

SELECT * FROM PRODUCT WHERE PRICE-COST > 100;

SELECT *  FROM PRODUCT
WHERE PRICE-COST > (SELECT PRICE-COST AS PROFIT FROM PRODUCT WHERE P_ID = 102);

SELECT * FROM PRODUCT WHERE YEAR(LAUNCHED_DATE) = 2010;

SELECT * FROM PRODUCT
WHERE (P_NAME LIKE '%S' OR P_NAME LIKE 'W%') 
AND P_FAMILY = 'STATIONARY' AND COST > 300;

SELECT * FROM PRODUCT 
WHERE MONTH(LAUNCHED_DATE) = MONTH(ADDDATE(SYSDATE(), INTERVAL  + 1 MONTH));


SELECT P_NAME FROM PRODUCT 
WHERE PRICE = (SELECT MAX(PRICE) FROM PRODUCT)

SELECT P_NAME, COST, PRICE, PRICE-COST AS PROFIT, (((PRICE-COST)/COST)*100) AS PROFIT_PERCENTAGE
FROM PRODUCT;

SELECT COUNT(P_ID) AS TOTAL FROM PRODUCT 
WHERE P_FAMILY = 'COMPUTER' AND (PRICE BETWEEN 2000 AND 50000);


SELECT AUT_NAME, BOOK_NAME FROM AURTOR_BOOK A_B
JOIN BOOK B ON A_B.BOOK_ID = B.BOOK_ID
JOIN AUTHER A ON A_B.BOOK_ID= A.BOOK_ID
WHERE AUTHOR_NAME LIKE 'S%'

SELECT CATEGORY, COUNT(*) 
FROM BOOK B JOIN AUTHOR_BOOK A_B
ON B_BOOK_ID = A_B.BOOK_ID
GROUP BY CATEGORY


CREATE TABLE BOOK
(BOOK_ID INT PRIMARY KEY,
BOOK_NAME VARCHAR(50),
CATEGORY VARCHAR(20),
PUB_DATE DATE);


CREATE TABLE AUTHOR
(AUTH_ID INT PRIMARY KEY,
FIRST_NAME VARCHAR(20),
LAST_NAME VARCHAR(5),
DOB DATE);

CREATE TABLE BOOK_AUTHOR
(B_A_ID INT PRIMARY KEY,
BOOK_ID INT,
AUTH_ID INT)

ALTER TABLE BOOK_AUTHOR
ADD CONSTRAINT FK_BOOKID
FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID)

ALTER TABLE BOOK_AUTHOR
ADD CONSTRAINT FK_AUTHID
FOREIGN KEY(AUTH_ID) REFERENCES AUTHOR(AUTH_ID)

INSERT INTO BOOK VALUES(100, 'SEVEN WAYS OF EFFECTIVE PEOPLE', 'SELF HELP', '2015-02-10');
INSERT INTO BOOK VALUES(101, 'QUALITIES TO BECOME GREAT', 'SELF HELP', '2014-03-14');
INSERT INTO BOOK VALUES(102, 'BECOME GREAT IN 500 DAYS', 'SELF HELP', '2020-03-16');
INSERT INTO BOOK VALUES(103, 'MOUNTAIN HEALER', 'FICTION', '2021-03-15');

INSERT INTO AUTHOR VALUES(50, 'STEPHAN', 'C', '1970-02-10');
INSERT INTO AUTHOR VALUES(51, 'JOHN', 'M', '1970-11-15');
INSERT INTO AUTHOR VALUES(52, 'RAM', 'K', '1998-03-20');


INSERT INTO book_author VALUES(1, 100, 50);
INSERT INTO book_author VALUES(2, 101, 50);
INSERT INTO book_author VALUES(3, 102, 50);
INSERT INTO book_author VALUES(4, 102, 51);
INSERT INTO book_author VALUES(5, 103, 52);

SELECT FIRST_NAME FROM
(SELECT FIRST_NAME, COUNT(BOOK_ID) NO_OF_BOOKS 
FROM AUTHOR A INNER JOIN BOOK_AUTHOR BA 
ON A.AUTH_ID = BA.AUTH_ID
GROUP BY FIRST_NAME) TEMP
WHERE NO_OF_BOOKS>1

SELECT FIRST_NAME FROM AUTHOR A WHERE AUTH_ID IN 
(SELECT AUTH_ID, COUNT(BOOK_ID) NO_OF_BOOKS 
FROM AUTHOR A INNER JOIN BOOK_AUTHOR BA 
ON A.AUTH_ID = BA.AUTH_ID
GROUP BY AUTH_ID
HAVING NO_OF_BOOKS>1);
DROP TABLE DIST_ORDER
CREATE TABLE DIST_ORDER
(D_ORD_ID INT PRIMARY KEY,
ORD_DATE DATE,
BOOK_ID INT,
QTY INT,
PRICE_OF_BOOK INT)
ALTER TABLE DIST_ORDER
ADD CONSTRAINT FK_BOOK_ID1
FOREIGN KEY(BOOK_ID) REFERENCES BOOK(BOOK_ID)

INSERT INTO DIST_ORDER VALUES(1000, '2021-09-10', 100, 1000, 400);
INSERT INTO DIST_ORDER VALUES(1001, '2021-09-11', 101, 2000, 150);
INSERT INTO DIST_ORDER VALUES(1002, '2021-09-12', 102, 500, 600);
INSERT INTO DIST_ORDER VALUES(1003, '2021-09-13', 100, 500, 400);
INSERT INTO DIST_ORDER VALUES(1004, '2021-09-14', 101, 500, 150);



